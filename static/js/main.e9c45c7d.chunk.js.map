{"version":3,"sources":["Common/CheckBox/MyCheckBox.module.css","Common/Button/MyButton.module.css","Common/Input/MyInput.module.css","Junior/Junior.module.css","Junior+/JuniorPlus.module.css","NavBar/NavBar.module.css","preJunior/Messages/Name/name.tsx","preJunior/Messages/Text/text.tsx","preJunior/Messages/Time/time.tsx","preJunior/Messages/message.tsx","Common/Button/MyButton.tsx","Common/CheckBox/MyCheckBox.tsx","Common/Input/MyInput.tsx","preJunior/Demonstration/Demonstration.tsx","preJunior/Todolist/Tododlist.tsx","preJunior/Todolist/Affairs.tsx","preJunior/InputHello/Input.tsx","preJunior/PreJunior.tsx","Common/EditableSpan/EditableSpan.tsx","Junior/TestLocalStorage.tsx","Junior/Junior.tsx","Junior+/JuniorPlus.tsx","NavBar/NavBar.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Name","props","name","Text","text","Time","time","Message","className","src","MyButton","onClick","styleRed","s","buttonRed","button","title","MyCheckBox","label","type","checkbox","checked","onChange","e","changeStatus","currentTarget","fake","MyInput","autoFocus","onBlur","error","inputError","input","value","onKeyPress","KeyPress","Demonstration","Todolist","tasks","map","t","key","id","p","newCheckBoxValue","removeTasks","changeFilter","Affairs","useState","affairs","setAffairs","filter","setFilter","tasksForTodoList","taskId","filteredTasks","newFilterValue","task","find","InputField","inputName","setInputName","names","setNames","setError","helloInput","alert","newName","newNames","v1","addInputName","length","PreJunior","EditableSpan","editMode","setEditMode","deActivatedEditMode","onChangeSpan","onDoubleClick","span","TestLocalStorage","setValue","setSpan","state","stateAsString","JSON","stringify","localStorage","setItem","saveState","defaultState","getItem","parse","restoreState","Junior","JuniorPlus","titleJunior","NavBar","hiddenMenuTicker","btnMenu","htmlFor","first","second","third","hiddenMenu","item","to","activeClassName","active","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.e9c45c7d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"MyCheckBox_label__2ahpY\",\"checkbox\":\"MyCheckBox_checkbox__1w0wK\",\"fake\":\"MyCheckBox_fake__1wjkr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"MyButton_button__36Ggp\",\"buttonRed\":\"MyButton_buttonRed__TQmNE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputError\":\"MyInput_inputError__3wsdT\",\"input\":\"MyInput_input__emNMN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Junior_title__5sXMJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titleJunior\":\"JuniorPlus_titleJunior__3reSv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hiddenMenu\":\"NavBar_hiddenMenu__2kB-l\",\"hiddenMenuTicker\":\"NavBar_hiddenMenuTicker__pOoAS\",\"btnMenu\":\"NavBar_btnMenu__1OSL7\",\"first\":\"NavBar_first__Ay1WG\",\"second\":\"NavBar_second__1eiaG\",\"third\":\"NavBar_third__1mgEI\",\"item\":\"NavBar_item__2kAmi\",\"active\":\"NavBar_active__1U5Ww\"};","import React from 'react';\r\n\r\n\r\ntype NameType = {\r\n    name:string,\r\n}\r\n\r\nconst Name: React.FC<NameType> = (props: NameType) => {\r\n    return (\r\n        <div>{props.name}</div>\r\n    );\r\n}\r\n\r\nexport default Name;","import React from 'react';\r\n\r\ntype TextType = {\r\n    text: string,\r\n}\r\n\r\nconst Text:React.FC<TextType> = (props) => {\r\nreturn(\r\n    <div>{props.text}</div>\r\n);\r\n}\r\n\r\nexport default Text;","import React from 'react';\r\n\r\ntype timeType = {\r\n    time:string,\r\n}\r\n\r\nconst  Time: React.FC<timeType> = (props) => {\r\nreturn(\r\n    <div>{props.time}</div>\r\n);\r\n}\r\n\r\nexport default Time;","import React from 'react';\r\n\r\nimport Name from \"./Name/name\";\r\nimport Text from \"./Text/text\";\r\nimport Time from \"./Time/time\";\r\nimport './message.css';\r\n\r\n\r\nconst Message = () => {\r\n    return (\r\n        <div className='window'>\r\n\r\n                <img src='https://www.nj.com/resizer/h8MrN0-Nw5dB5FOmMVGMmfVKFJo=/450x0/smart/cloudfront-us-east-1.images.arcpublishing.com/advancelocal/SJGKVE5UNVESVCW7BBOHKQCZVE.jpg'/>\r\n\r\n            <div className='message'>\r\n                <div className='name'><Name name='Ignat'/></div>\r\n                <div className='text'><Text text='Hi, how are you?'/></div>\r\n                <div className='time'><Time time='22:26'/></div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from \"./MyButton.module.css\"\r\n\r\n type typeMyButton = {\r\n    title: string\r\n     onClick: () => void\r\n     styleRed: boolean\r\n}\r\n\r\n\r\n\r\nconst MyButton:React.FC<typeMyButton> = (props) => {\r\n    return (\r\n            <button onClick={props.onClick} className={props.styleRed? s.buttonRed : s.button}>{props.title}</button>\r\n    )\r\n}\r\n\r\nexport default MyButton;","import React, {ChangeEvent} from 'react';\r\nimport s from './MyCheckBox.module.css'\r\n\r\ntype myCheckBoxType = {\r\n    checked: boolean\r\n    changeStatus: (checked: boolean) => void\r\n}\r\n\r\nconst MyCheckBox: React.FC<myCheckBoxType> = (props) => {\r\n    return (\r\n        <label className={s.label}>\r\n            <input type=\"checkbox\"\r\n                   className={s.checkbox}\r\n                   checked={props.checked}\r\n                   onChange={ (e) => props.changeStatus(e.currentTarget.checked)}/>\r\n\r\n            <span className={s.fake}></span>\r\n        </label>\r\n\r\n    )\r\n}\r\n\r\nexport default MyCheckBox;","import React, {ChangeEvent, KeyboardEvent} from 'react';\r\nimport s from './MyInput.module.css'\r\n\r\ntype inputPropsType = {\r\n    value: string\r\n    onChange: (value: string) => void\r\n    KeyPress: (e: KeyboardEvent<HTMLInputElement>) => void\r\n    error: boolean\r\n    autoFocus: boolean\r\n    onBlur: () => void\r\n\r\n}\r\n\r\nconst MyInput: React.FC<inputPropsType> = (props) => {\r\n\r\n    return(\r\n        <div className={\"myInput\"}>\r\n            <input\r\n                autoFocus={props.autoFocus}\r\n                onBlur={props.onBlur}\r\n                className={props.error? s.inputError : s.input}\r\n                type= \"text\"\r\n                value={props.value}\r\n                onChange={(e)=> props.onChange(e.currentTarget.value)}\r\n                onKeyPress={props.KeyPress}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyInput;","import React from 'react';\r\nimport MyButton from \"../../Common/Button/MyButton\";\r\nimport MyCheckBox from \"../../Common/CheckBox/MyCheckBox\";\r\nimport MyInput from \"../../Common/Input/MyInput\";\r\n\r\nexport const Demonstration = () => {\r\n    return (\r\n        <div className={\"demonstration\"}>\r\n            <MyButton title={\"demonstration\"} onClick={() => {} } styleRed={false}/>\r\n            <MyCheckBox checked={true} changeStatus={ () => {} }/>\r\n            <MyInput onBlur={() => {}}\r\n                     autoFocus={false}\r\n                     value={\"demonstration\"}\r\n                     KeyPress={ (e) => { }  }\r\n                     onChange={ () => {} }\r\n                     error={false}/>\r\n        </div>\r\n    )\r\n}\r\n","import React, {ChangeEvent} from 'react';\r\nimport {AffairsType, FilterValuesType} from \"./Affairs\";\r\nimport MyButton from \"../../Common/Button/MyButton\";\r\nimport MyCheckBox from \"../../Common/CheckBox/MyCheckBox\";\r\n\r\n\r\ntype PropsType = {\r\n    title: string\r\n    tasks: Array<AffairsType>,\r\n    removeTasks: (taskId: number) => void,\r\n    changeFilter: (newFilterValue: FilterValuesType) => void,\r\n    changeStatus: (id: number, p: boolean) => void\r\n\r\n}\r\n\r\n\r\n\r\nexport function Todolist(props: PropsType ){\r\n\r\n    let allClick = () => {props.changeFilter(\"all\")};\r\n    let activeClick = () => {props.changeFilter(\"active\")};\r\n    let completedClick = () => {props.changeFilter(\"completed\")};\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h3>Affairs</h3>\r\n            <ul>\r\n                {props.tasks.map((t)=>{\r\n                    let deleteClick = () =>{props.removeTasks(t.id)}\r\n                    let changeStatus = (checked: boolean) => {\r\n                        let newCheckBoxValue = checked;\r\n                        props.changeStatus(t.id, newCheckBoxValue)\r\n                    }\r\n                    return (\r\n                        <li key={t.id} className={\"liTodo\"}>\r\n                            {/*<input type=\"checkbox\" checked={t.p}/>*/}\r\n                            <MyCheckBox checked={t.p} changeStatus={changeStatus}/>\r\n\r\n                            <span>{t.title}</span>\r\n                            <MyButton title={\"x\"} onClick={deleteClick} styleRed={true}/>\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n            <div>\r\n                <MyButton title={\"all\"} onClick={allClick} styleRed={false}/>\r\n                <MyButton title={\"active\"} onClick={activeClick} styleRed={false}/>\r\n                <MyButton title={\"completed\"} onClick={completedClick} styleRed={false}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useState} from 'react';\r\nimport {Todolist} from \"./Tododlist\";\r\n\r\nexport type AffairsType = {\r\n    id: number\r\n    title: string\r\n    p: boolean\r\n}\r\n\r\nexport type FilterValuesType = \"all\" | \"active\" | \"completed\";\r\n\r\n\r\nfunction Affairs() {\r\n    let [affairs, setAffairs] = useState([\r\n        {id: 1, title: \"работа\", p: true},\r\n        {id: 2, title: \"аниме\", p: false},\r\n        {id: 3, title: \"игры\", p: false},\r\n        {id: 4, title: \"реакт\", p: true},\r\n        {id: 5, title: \"хтмл\", p: true}\r\n    ]);\r\n\r\n    let  [filter, setFilter] = useState<FilterValuesType>(\"all\")\r\n\r\n\r\n    function removeTask(taskId: number) {\r\n        let filteredTasks = affairs.filter((t) => t.id !== taskId)\r\n        setAffairs(filteredTasks);\r\n    }\r\n\r\n    function changeFilter(newFilterValue: FilterValuesType) {\r\n        setFilter(newFilterValue);\r\n    }\r\n\r\n    function changeStatus(id: number, p: boolean) {\r\n      let  task = affairs.find(t => t.id === id);\r\n      if (task) {\r\n          task.p = p;\r\n          setAffairs([...affairs]);\r\n      }\r\n\r\n    }\r\n\r\n\r\n    let tasksForTodoList = affairs;\r\n    if(filter === \"active\"){\r\n        tasksForTodoList = affairs.filter(t => t.p === false)\r\n    }\r\n\r\n    if (filter === \"completed\") {\r\n        tasksForTodoList = affairs.filter(t => t.p === true)\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Todolist\r\n                title={\"To-do list\"}\r\n                tasks={tasksForTodoList}\r\n                removeTasks={removeTask}\r\n                changeFilter={changeFilter}\r\n                changeStatus={changeStatus}\r\n            />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Affairs;","import React, {useState, ChangeEvent, KeyboardEvent} from \"react\";\r\nimport {v1} from \"uuid\";\r\nimport MyInput from \"../../Common/Input/MyInput\";\r\nimport MyButton from \"../../Common/Button/MyButton\";\r\n\r\ntype newNames = { id: string, name: string }\r\n\r\nexport function InputField() {\r\n\r\n    let [inputName, setInputName] = useState(\"\");\r\n\r\n    let [names, setNames] = useState<Array<newNames>>([])\r\n\r\n    let [error, setError] = useState<boolean>(false)\r\n\r\n    function addInputName(newName: string) {\r\n        let newInputName = {id: v1(), name: newName};\r\n        let newNames = [newInputName, ...names];\r\n        setNames(newNames)\r\n    }\r\n\r\n\r\n    function onHelloInputChanged(value: string) {\r\n        setInputName(value);\r\n        setError(false)\r\n    }\r\n\r\n    function onHelloInputKeyPressed(e: KeyboardEvent<HTMLInputElement>) {\r\n        if (e.key === \"Enter\")\r\n            helloInput();\r\n    }\r\n\r\n    function helloInput() {\r\n        if (inputName != \"\") {\r\n            alert(`hello ${inputName}`);\r\n            setInputName(\"\");\r\n            addInputName(inputName)\r\n        } else {\r\n            setError(true)\r\n            alert(\"введите текст\")\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <MyInput\r\n                value={inputName}\r\n                autoFocus={false}\r\n                onBlur={()=>{}}\r\n                onChange={onHelloInputChanged}\r\n                KeyPress={onHelloInputKeyPressed}\r\n                error={error}/>\r\n            <MyButton title={\"hello\"} onClick={helloInput} styleRed={false}/>\r\n            <div> Количество пользователей: {names.length} </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport Messages from \"./Messages/message\";\r\nimport {Demonstration} from \"./Demonstration/Demonstration\";\r\nimport Affairs from \"./Todolist/Affairs\";\r\nimport {InputField} from \"./InputHello/Input\";\r\n\r\nexport const PreJunior = () => {\r\n    return (\r\n        <div>\r\n            <Messages />\r\n            <Demonstration/>\r\n            <Affairs/>\r\n            <InputField/>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, {KeyboardEvent, useState} from 'react';\r\nimport MyInput from \"../Input/MyInput\";\r\n\r\ntype EditableSpanPropsType = {\r\n    value: string\r\n    onChange: (value: string) => void\r\n    onChangeSpan: () => void\r\n    span: string\r\n}\r\n\r\n export const EditableSpan = (props: EditableSpanPropsType) => {\r\n\r\n     let [editMode, setEditMode] = useState<boolean>(false);\r\n\r\n     const activatedEditMode = () => {\r\n         setEditMode(true)\r\n     }\r\n\r\n     const deActivatedEditMode = () => {\r\n         setEditMode(false)\r\n     }\r\n\r\n     const onChangeValue = (e: KeyboardEvent<HTMLInputElement>) => {\r\n         if (e.key === \"Enter\") {\r\n             props.onChangeSpan()\r\n             deActivatedEditMode()\r\n         }\r\n     }\r\n\r\n\r\n\r\n    return (\r\n        editMode\r\n            ?<MyInput value={props.value}\r\n                      onChange={props.onChange}\r\n                      KeyPress={onChangeValue}\r\n                      error={false}\r\n                      onBlur={deActivatedEditMode}\r\n                      autoFocus={true}/>\r\n            :<span onDoubleClick={activatedEditMode}>{props.span}</span>\r\n    )\r\n}","import React, {useState} from 'react';\r\nimport {EditableSpan} from \"../Common/EditableSpan/EditableSpan\";\r\nimport MyButton from \"../Common/Button/MyButton\";\r\n\r\nexport function saveState<T> (key: string, state: T) {\r\n    const stateAsString = JSON.stringify(state);\r\n    localStorage.setItem(key, stateAsString)\r\n}\r\n\r\nexport function restoreState<T>(key: string, defaultState: T) {\r\n    const stateAsString = localStorage.getItem(key);\r\n    if (stateAsString !== null) defaultState = JSON.parse(stateAsString) as T;\r\n    return defaultState;\r\n}\r\n\r\n\r\n\r\nexport function TestLocalStorage() {\r\n\r\n\r\n    let [value, setValue] = useState(\"\");\r\n    let [span, setSpan] = useState(\"-test-\");\r\n\r\n    const changeValue = (value: string) => {\r\n        setValue(value);\r\n    }\r\n    const changeSpan = () => {\r\n        setSpan(value)\r\n    }\r\n\r\n    const saveValue = () => {\r\n        saveState(\"span\", value)\r\n        setSpan(value)\r\n    }\r\n\r\n    const getValue = () => {\r\n        setSpan(restoreState(\"span\", \"default\"))\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <EditableSpan value={value} onChange={changeValue} onChangeSpan={changeSpan} span={span}/><br/>\r\n            <MyButton title={\"Save value\"} onClick={saveValue} styleRed={false}/>\r\n            <MyButton title={\"Get value\"} onClick={getValue} styleRed={false}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useState} from 'react';\r\nimport s from './Junior.module.css'\r\nimport {EditableSpan} from '../Common/EditableSpan/EditableSpan';\r\nimport {TestLocalStorage} from \"./TestLocalStorage\";\r\n\r\nexport const Junior = () => {\r\n    let [value, setValue] = useState(\"\");\r\n    let [span, setSpan] = useState(\"text\");\r\n\r\n    function onChangeValue(value: string) {\r\n        setValue(value);\r\n    }\r\n    function onChangeSpan() {\r\n        setSpan(value)\r\n    }\r\n\r\n    return (\r\n        <div className={s.title}>\r\n            <h2>Junior</h2>\r\n            <EditableSpan value={value}\r\n                          span={span}\r\n                          onChange={onChangeValue}\r\n                          onChangeSpan={onChangeSpan}\r\n            />\r\n            <TestLocalStorage/>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport s from './JuniorPlus.module.css'\r\n\r\nexport const JuniorPlus = () => {\r\n    return (\r\n        <div className={s.titleJunior}>\r\n            <h2>Junior+</h2>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport s from './NavBar.module.css'\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nexport const NavBar = () => {\r\n    return (\r\n        <div>\r\n            <input type=\"checkbox\" id=\"hmt\" className={s.hiddenMenuTicker}/>\r\n                <label className={s.btnMenu} htmlFor=\"hmt\">\r\n                    <span className={s.first}></span>\r\n                    <span className={s.second}></span>\r\n                    <span className={s.third}></span>\r\n                </label>\r\n                <div className={s.hiddenMenu}>\r\n                    <div className={s.item}>\r\n                        <NavLink to=\"/PreJunior\" className={s.item} activeClassName={s.active}>PreJunior</NavLink>\r\n                    </div>\r\n                    <div className={s.item}>\r\n                        <NavLink to=\"/Junior\" className={s.item} activeClassName={s.active}>Junior</NavLink>\r\n                    </div>\r\n                    <div className={s.item}>\r\n                        <NavLink to=\"/Junior+\" className={s.item} activeClassName={s.active}>Junior+</NavLink>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n\r\n\r\n)\r\n}","import React from 'react';\nimport './App.css';\nimport {PreJunior} from \"./preJunior/PreJunior\";\nimport {Junior} from \"./Junior/Junior\";\nimport {JuniorPlus} from \"./Junior+/JuniorPlus\";\nimport {NavBar} from \"./NavBar/NavBar\";\nimport {Route, HashRouter} from 'react-router-dom';\n\n\nconst App = () => {\n    return (\n        <HashRouter>\n            <div className=\"App\">\n                <NavBar/>\n                <Route path=\"/PreJunior\" component={PreJunior}/>\n                <Route path=\"/Junior\" component={Junior}/>\n                <Route path=\"/Junior+\" component={JuniorPlus}/>\n            </div>\n        </HashRouter>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}